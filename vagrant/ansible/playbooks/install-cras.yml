---
- hosts: all
  vars:
    - main_workdir: /opt/eve-linux/setup
    - adhd_version: master
    - adhd_workdir: "{{ main_workdir }}/adhd"
    - cras_workdir: "{{ adhd_workdir }}/cras"
    - cras_configure_opts: "--disable-dbus --disable-webrtc-apm --with-socketdir=/var/run/cras"
    - cras_lib_version: "0.0.0"
    - system_lib_dir: "/usr/lib64"
    - alsa_lib_dir: "{{ system_lib_dir }}/alsa-lib"
    - login_user: vagrant

  tasks:
    - name: Install dev dependencies
      become: true
      dnf:
        name:
          - "@development-tools"
          - acpid                   # for acpi_listener, needed for headset jack detection
          - libtool
          - libudev-devel
          - sbc-devel
          - alsa-lib-devel
          - iniparser-devel
          - ladspa-devel
          - speex-devel
          - speexdsp-devel
        state: latest 

    - name: Create working dir to build packages
      become: true
      file:
        path: "{{ main_workdir }}"
        mode: 0777
        state: directory

###### Build and install cras (chromium audio server)

    - name: clone cras source
      git:
        repo: 'https://chromium.googlesource.com/chromiumos/third_party/adhd'
        version: "{{ adhd_version }}"
        dest: "{{ adhd_workdir }}"

    - name: generate cras/config (failure expected)
      command: make
      args:
        creates: "{{ cras_workdir }}/configure"
        chdir: "{{ adhd_workdir }}"
      ignore_errors: true

    - name: configure cras
      command: "./configure {{ cras_configure_opts }}"
      args:
        creates: "{{ cras_workdir }}/Makefile"
        chdir: "{{ cras_workdir }}"

    - name: build cras
      command: "make"
      args:
        creates: "{{ cras_workdir }}/src/cras"
        chdir: "{{ cras_workdir }}"

    - name: install cras binaries
      become: true
      copy:
        remote_src: true
        src: "{{ cras_workdir }}/src/{{ item }}"
        dest: "/usr/local/bin"
        mode: 0755
      with_items:
        - cras
        - cras_test_client

    - name: install cras library
      become: true
      copy:
        remote_src: true
        src: "{{ cras_workdir }}/src/.libs/libcras.so.{{ cras_lib_version }}"
        dest: "{{ system_lib_dir }}"

    - name: run ldconfig on cras library
      become: true
      command: "ldconfig -l {{ system_lib_dir }}/libcras.so.{{ cras_lib_version }}"

    - name: install cras / alsa plugin libs
      become: true
      copy:
        remote_src: true
        src: "{{ cras_workdir }}/src/.libs/{{ item }}"
        dest: "{{ alsa_lib_dir }}"
      with_items:
        - libasound_module_ctl_cras.so
        - libasound_module_pcm_cras.so

    - name: ensure /etc/alsa/conf.d exists
      become: true
      file:
        path: /etc/alsa/conf.d
        state: directory

    - name: copy cras-enabled alsa config
      become: true
      copy:
        src: files/etc/alsa/conf.d/10-cras.conf
        dest: /etc/alsa/conf.d

    - name: ensure /etc/pulse exists
      become: true
      file:
        path: /etc/pulse
        state: directory

    - name: copy cras-enabled pulseaudio config
      become: true
      copy:
        src: files/etc/pulse/default.pa
        dest: /etc/pulse

    - name: create cras group
      become: true
      group:
        name: cras
        state: present

    - name: create cras user
      become: true
      user:
        name: cras
        group: cras
        create_home: false
        groups: cras,audio

    - name: add login user to cras group
      become: true
      command: "usermod -aG cras {{ login_user }}"

    - name: add cras systemd service file
      become: true
      copy:
        src: files/etc/systemd/system/cras.service
        dest: /etc/systemd/system

    - name: copy cras tmpfiles.d entry
      become: true
      copy:
        src: files/etc/tmpfiles.d/cras.conf
        dest: /etc/tmpfiles.d

    - name: copy eve-audio-ctl shell script
      become: true
      copy:
        src: files/usr/local/bin/eve-audio-ctl.sh
        dest: /usr/local/bin
        mode: 0775

